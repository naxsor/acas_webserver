# Generated by Django 3.1.3 on 2021-04-29 19:41

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sensors', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='sp2_xr',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('utc_offset', models.IntegerField(blank=True, db_column='UTC Offset', null=True)),
                ('incand_part_conc', models.FloatField(blank=True, db_column='Incandescence Particle Concentration', null=True)),
                ('scatt_part_conc', models.FloatField(blank=True, db_column='Scattering Particle Concentration', null=True)),
                ('incand_mass_conc', models.FloatField(blank=True, db_column='Total Mass per Second', null=True)),
                ('scatt_bin_1', models.FloatField(blank=True, db_column='Scatter Bin 1', null=True)),
                ('scatt_bin_2', models.FloatField(blank=True, db_column='Scatter Bin 2', null=True)),
                ('scatt_bin_3', models.FloatField(blank=True, db_column='Scatter Bin 3', null=True)),
                ('scatt_bin_4', models.FloatField(blank=True, db_column='Scatter Bin 4', null=True)),
                ('scatt_bin_5', models.FloatField(blank=True, db_column='Scatter Bin 5', null=True)),
                ('scatt_bin_6', models.FloatField(blank=True, db_column='Scatter Bin 6', null=True)),
                ('scatt_bin_7', models.FloatField(blank=True, db_column='Scatter Bin 7', null=True)),
                ('scatt_bin_8', models.FloatField(blank=True, db_column='Scatter Bin 8', null=True)),
                ('scatt_bin_9', models.FloatField(blank=True, db_column='Scatter Bin 9', null=True)),
                ('scatt_bin_10', models.FloatField(blank=True, db_column='Scatter Bin 10', null=True)),
                ('scatt_bin_11', models.FloatField(blank=True, db_column='Scatter Bin 11', null=True)),
                ('scatt_bin_12', models.FloatField(blank=True, db_column='Scatter Bin 12', null=True)),
                ('scatt_bin_13', models.FloatField(blank=True, db_column='Scatter Bin 13', null=True)),
                ('scatt_bin_14', models.FloatField(blank=True, db_column='Scatter Bin 14', null=True)),
                ('scatt_bin_15', models.FloatField(blank=True, db_column='Scatter Bin 15', null=True)),
                ('scatt_bin_16', models.FloatField(blank=True, db_column='Scatter Bin 16', null=True)),
                ('scatt_bin_17', models.FloatField(blank=True, db_column='Scatter Bin 17', null=True)),
                ('scatt_bin_18', models.FloatField(blank=True, db_column='Scatter Bin 18', null=True)),
                ('scatt_bin_19', models.FloatField(blank=True, db_column='Scatter Bin 19', null=True)),
                ('scatt_bin_20', models.FloatField(blank=True, db_column='Scatter Bin 20', null=True)),
                ('incand_bin_1', models.FloatField(blank=True, db_column='Incandescence Bin 1', null=True)),
                ('incand_bin_2', models.FloatField(blank=True, db_column='Incandescence Bin 2', null=True)),
                ('incand_bin_3', models.FloatField(blank=True, db_column='Incandescence Bin 3', null=True)),
                ('incand_bin_4', models.FloatField(blank=True, db_column='Incandescence Bin 4', null=True)),
                ('incand_bin_5', models.FloatField(blank=True, db_column='Incandescence Bin 5', null=True)),
                ('incand_bin_6', models.FloatField(blank=True, db_column='Incandescence Bin 6', null=True)),
                ('incand_bin_7', models.FloatField(blank=True, db_column='Incandescence Bin 7', null=True)),
                ('incand_bin_8', models.FloatField(blank=True, db_column='Incandescence Bin 8', null=True)),
                ('incand_bin_9', models.FloatField(blank=True, db_column='Incandescence Bin 9', null=True)),
                ('incand_bin_10', models.FloatField(blank=True, db_column='Incandescence Bin 10', null=True)),
                ('incand_bin_11', models.FloatField(blank=True, db_column='Incandescence Bin 11', null=True)),
                ('incand_bin_12', models.FloatField(blank=True, db_column='Incandescence Bin 12', null=True)),
                ('incand_bin_13', models.FloatField(blank=True, db_column='Incandescence Bin 13', null=True)),
                ('incand_bin_14', models.FloatField(blank=True, db_column='Incandescence Bin 14', null=True)),
                ('incand_bin_15', models.FloatField(blank=True, db_column='Incandescence Bin 15', null=True)),
                ('incand_bin_16', models.FloatField(blank=True, db_column='Incandescence Bin 16', null=True)),
                ('incand_bin_17', models.FloatField(blank=True, db_column='Incandescence Bin 17', null=True)),
                ('incand_bin_18', models.FloatField(blank=True, db_column='Incandescence Bin 18', null=True)),
                ('incand_bin_19', models.FloatField(blank=True, db_column='Incandescence Bin 19', null=True)),
                ('incand_bin_20', models.FloatField(blank=True, db_column='Incandescence Bin 20', null=True)),
                ('qualified_part', models.FloatField(blank=True, db_column='Qualified Particles', null=True)),
                ('pbp_record', models.FloatField(blank=True, db_column='PBP Record', null=True)),
                ('dual_qual_scatt_incand_part', models.FloatField(blank=True, db_column='Dual Qualified Scatter and Incandescence Particles', null=True)),
                ('qualified_scatt_part', models.FloatField(blank=True, db_column='Qualified Scatter Only Particles', null=True)),
                ('qualifies_incand_part', models.FloatField(blank=True, db_column='Qualified Incandescence OnlyParticles', null=True)),
                ('sheath_flow_read_vccm', models.FloatField(blank=True, db_column='Sheath Flow Controller Read (v)', null=True)),
                ('sheath_flow_read_sccm', models.FloatField(blank=True, db_column='Sheath Flow Controller Read (s)', null=True)),
                ('sheath_flow_press', models.FloatField(blank=True, db_column='Sheath Flow Controller Pressure', null=True)),
                ('sheath_flow_temp', models.FloatField(blank=True, db_column='Sheath Flow Controller Temperature', null=True)),
                ('sample_flow_read_vccm', models.FloatField(blank=True, db_column='Sample Flow Controller Read (v)', null=True)),
                ('sample_flow_read_sccm', models.FloatField(blank=True, db_column='Sample Flow Controller Read (s)', null=True)),
                ('sample_flow_press', models.FloatField(blank=True, db_column='Sample Flow Controller Pressure', null=True)),
                ('sample_flow_temp', models.FloatField(blank=True, db_column='Sample Flow Controller Temperature', null=True)),
                ('laser_tec_temp', models.FloatField(blank=True, db_column='Laser TEC Temperature', null=True)),
                ('heatsink_temp', models.FloatField(blank=True, db_column='Computer Heatsink Temperature', null=True)),
                ('laser_heatsink_temp', models.FloatField(blank=True, db_column='Laser Heatsink Temperature', null=True)),
                ('outlet_air_temp', models.FloatField(blank=True, db_column='Outlet Air Temperature', null=True)),
                ('yag_output_monitor', models.FloatField(blank=True, db_column='YAG Output Monitor', null=True)),
                ('cavity_pressure', models.FloatField(blank=True, db_column='Cavity Pressure', null=True)),
                ('current_monitor_pump_laser', models.FloatField(blank=True, db_column='Current Monitor Pump Laser', null=True)),
                ('pump_laser_power_monitor', models.FloatField(blank=True, db_column='Pump Laser Power Monitor', null=True)),
                ('laser_voltage_monitor', models.FloatField(blank=True, db_column='Laser Voltage Monitor', null=True)),
                ('high_voltage_monitor', models.FloatField(blank=True, db_column='High Voltage Monitor', null=True)),
                ('purge_monitor_flow', models.FloatField(blank=True, db_column='Purge Flow Monitor', null=True)),
                ('board_temperature', models.FloatField(blank=True, db_column='Board Temperature', null=True)),
                ('baseline_sizer_low', models.FloatField(blank=True, db_column='Baseline Sizer Low', null=True)),
                ('baseline_sizer_high', models.FloatField(blank=True, db_column='Baseline Sizer High', null=True)),
                ('baseline_incand_low', models.FloatField(blank=True, db_column='Baseline Incandescence Low', null=True)),
                ('baseline_incand_high', models.FloatField(blank=True, db_column='Baseline Incandescence High', null=True)),
                ('bandwidth_sizer_low', models.FloatField(blank=True, db_column='Bandwidth Sizer Low', null=True)),
                ('bandwidth_sizer_high', models.FloatField(blank=True, db_column='Bandwidth Sizer High', null=True)),
                ('bandwidth_incand_low', models.FloatField(blank=True, db_column='Bandwidth Incandescence Low', null=True)),
                ('bandwidth_incand_high', models.FloatField(blank=True, db_column='Bandwidth Incandescence High', null=True)),
                ('scatt_rel_peak', models.FloatField(blank=True, db_column='Scattering Relative Peak', null=True)),
                ('scatt_transit_time', models.FloatField(blank=True, db_column='Scatter Transit Time', null=True)),
                ('scatt_hwhm', models.FloatField(blank=True, db_column='Scatter HWHM', null=True)),
                ('scatt_size', models.FloatField(blank=True, db_column='Scatter Size', null=True)),
                ('incand_rel_peal', models.FloatField(blank=True, db_column='Incandescence Relative Peak', null=True)),
                ('incand_transit_time', models.FloatField(blank=True, db_column='Incandescence Transit Time', null=True)),
                ('incand_peak_time', models.FloatField(blank=True, db_column='Incandescence Peak Time', null=True)),
                ('incand_hwhm', models.FloatField(blank=True, db_column='Incandescence HWHM', null=True)),
                ('incand_delay', models.FloatField(blank=True, db_column='Incandescence Delay', null=True)),
                ('incand_mass', models.FloatField(blank=True, db_column='Incandescence Mass', null=True)),
                ('flag_dual_qualified', models.FloatField(blank=True, db_column='Flag - Dual Qualified', null=True)),
                ('flag_scatt_detected', models.FloatField(blank=True, db_column='Flag - Scatter Detected', null=True)),
                ('flag_incand_detected', models.FloatField(blank=True, db_column='Flag - Incandescence Detected', null=True)),
                ('flag_scatt_rejected', models.FloatField(blank=True, db_column='Flag - Scatter Rejected', null=True)),
                ('flag_incand_rejected', models.FloatField(blank=True, db_column='Flag - Incandescence Rejected', null=True)),
            ],
            options={
                'db_table': 'sensor_sp2',
                'managed': True,
            },
        ),
    ]
