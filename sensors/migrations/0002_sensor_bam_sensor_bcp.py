# Generated by Django 3.2.13 on 2022-06-28 00:23

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sensors', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='sensor_bam',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('concentration', models.FloatField(blank=True, db_column='Concentration', null=True)),
                ('flow', models.FloatField(blank=True, db_column='Floe', null=True)),
                ('avg_ambient_temperature', models.FloatField(blank=True, db_column='Average Ambient Temperature', null=True)),
                ('pressure', models.FloatField(blank=True, db_column='Pressure', null=True)),
                ('relative_humidity', models.FloatField(blank=True, db_column='Relative Humidity', null=True)),
                ('reference', models.FloatField(blank=True, db_column='Reference', null=True)),
                ('errors', models.FloatField(blank=True, db_column='Errors', null=True)),
            ],
            options={
                'db_table': 'sensor_bam',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='sensor_bcp',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('end_senconds', models.FloatField(blank=True, db_column='End Seconds', null=True)),
                ('status', models.IntegerField(blank=True, db_column='Status', null=True)),
                ('unused', models.IntegerField(blank=True, db_column='Unused', null=True)),
                ('unused_1', models.IntegerField(blank=True, db_column='Unused.1', null=True)),
                ('avg_transit', models.IntegerField(blank=True, db_column='Average Transit', null=True)),
                ('dt_bandwidth', models.IntegerField(blank=True, db_column='DT Bandwidth', null=True)),
                ('dynamic_threshold', models.IntegerField(blank=True, db_column='Dynamic Threshold', null=True)),
                ('over_range', models.IntegerField(blank=True, db_column='Over Range', null=True)),
                ('first_stage_monitor', models.FloatField(blank=True, db_column='First Stage Monitor', null=True)),
                ('baseline_monitor', models.FloatField(blank=True, db_column='Baseline Monitor', null=True)),
                ('unused_2', models.IntegerField(blank=True, db_column='Unused.2', null=True)),
                ('optic_block_temp', models.FloatField(blank=True, db_column='Optic Block Temperature', null=True)),
                ('sizer_baseline', models.FloatField(blank=True, db_column='Sizer Baseline', null=True)),
                ('qualifier_baseline', models.FloatField(blank=True, db_column='Qualifier Baseline', null=True)),
                ('v_monitor', models.FloatField(blank=True, db_column='5V Monitor', null=True)),
                ('control_board_temp', models.FloatField(blank=True, db_column='Control Board Temperature', null=True)),
                ('spare_1', models.FloatField(blank=True, db_column='Spare 1', null=True)),
                ('spare_2', models.FloatField(blank=True, db_column='Spare 2', null=True)),
                ('spare_3', models.FloatField(blank=True, db_column='Spare 3', null=True)),
                ('spare_4', models.FloatField(blank=True, db_column='Spare 4', null=True)),
                ('spare_5', models.FloatField(blank=True, db_column='Spare 5', null=True)),
                ('spare_6', models.FloatField(blank=True, db_column='Spare 6', null=True)),
                ('spare_7', models.FloatField(blank=True, db_column='Spare 7', null=True)),
                ('spare_8', models.FloatField(blank=True, db_column='Spare 8', null=True)),
                ('num_concentration', models.FloatField(blank=True, db_column='Number Concentration', null=True)),
                ('lwc', models.FloatField(blank=True, db_column='LWC', null=True)),
                ('mvd', models.FloatField(blank=True, db_column='MVD', null=True)),
                ('ed', models.FloatField(blank=True, db_column='ED', null=True)),
                ('applied_pas', models.FloatField(blank=True, db_column='Applied PAS', null=True)),
                ('bin_1', models.FloatField(blank=True, db_column='Bin 1', null=True)),
                ('bin_2', models.FloatField(blank=True, db_column='Bin 2', null=True)),
                ('bin_3', models.FloatField(blank=True, db_column='Bin 3', null=True)),
                ('bin_4', models.FloatField(blank=True, db_column='Bin 4', null=True)),
                ('bin_5', models.FloatField(blank=True, db_column='Bin 5', null=True)),
                ('bin_6', models.FloatField(blank=True, db_column='Bin 6', null=True)),
                ('bin_7', models.FloatField(blank=True, db_column='Bin 7', null=True)),
                ('bin_8', models.FloatField(blank=True, db_column='Bin 8', null=True)),
                ('bin_9', models.FloatField(blank=True, db_column='Bin 9', null=True)),
                ('bin_10', models.FloatField(blank=True, db_column='Bin 10', null=True)),
                ('bin_11', models.FloatField(blank=True, db_column='Bin 11', null=True)),
                ('bin_12', models.FloatField(blank=True, db_column='Bin 12', null=True)),
                ('bin_13', models.FloatField(blank=True, db_column='Bin 13', null=True)),
                ('bin_14', models.FloatField(blank=True, db_column='Bin 14', null=True)),
                ('bin_15', models.FloatField(blank=True, db_column='Bin 15', null=True)),
                ('bin_16', models.FloatField(blank=True, db_column='Bin 16', null=True)),
                ('bin_17', models.FloatField(blank=True, db_column='Bin 17', null=True)),
                ('bin_18', models.FloatField(blank=True, db_column='Bin 18', null=True)),
                ('bin_19', models.FloatField(blank=True, db_column='Bin 19', null=True)),
                ('bin_20', models.FloatField(blank=True, db_column='Bin 20', null=True)),
                ('bin_21', models.FloatField(blank=True, db_column='Bin 21', null=True)),
                ('bin_22', models.FloatField(blank=True, db_column='Bin 22', null=True)),
                ('bin_23', models.FloatField(blank=True, db_column='Bin 23', null=True)),
                ('bin_24', models.FloatField(blank=True, db_column='Bin 24', null=True)),
                ('bin_25', models.FloatField(blank=True, db_column='Bin 25', null=True)),
                ('bin_26', models.FloatField(blank=True, db_column='Bin 26', null=True)),
                ('bin_27', models.FloatField(blank=True, db_column='Bin 27', null=True)),
                ('bin_28', models.FloatField(blank=True, db_column='Bin 28', null=True)),
                ('bin_29', models.FloatField(blank=True, db_column='Bin 29', null=True)),
                ('bin_30', models.FloatField(blank=True, db_column='Bin 30', null=True)),
                ('inverse_bin_1', models.FloatField(blank=True, db_column='Inverse Bin 1', null=True)),
                ('inverse_bin_2', models.FloatField(blank=True, db_column='Inverse Bin 2', null=True)),
                ('inverse_bin_3', models.FloatField(blank=True, db_column='Inverse Bin 3', null=True)),
                ('inverse_bin_4', models.FloatField(blank=True, db_column='Inverse Bin 4', null=True)),
                ('inverse_bin_5', models.FloatField(blank=True, db_column='Inverse Bin 5', null=True)),
                ('inverse_bin_6', models.FloatField(blank=True, db_column='Inverse Bin 6', null=True)),
                ('inverse_bin_7', models.FloatField(blank=True, db_column='Inverse Bin 7', null=True)),
                ('inverse_bin_8', models.FloatField(blank=True, db_column='Inverse Bin 8', null=True)),
                ('inverse_bin_9', models.FloatField(blank=True, db_column='Inverse Bin 9', null=True)),
                ('inverse_bin_10', models.FloatField(blank=True, db_column='Inverse Bin 10', null=True)),
                ('inverse_bin_11', models.FloatField(blank=True, db_column='Inverse Bin 11', null=True)),
                ('inverse_bin_12', models.FloatField(blank=True, db_column='Inverse Bin 12', null=True)),
                ('inverse_bin_13', models.FloatField(blank=True, db_column='Inverse Bin 13', null=True)),
                ('inverse_bin_14', models.FloatField(blank=True, db_column='Inverse Bin 14', null=True)),
                ('inverse_bin_15', models.FloatField(blank=True, db_column='Inverse Bin 15', null=True)),
                ('inverse_bin_16', models.FloatField(blank=True, db_column='Inverse Bin 16', null=True)),
                ('inverse_bin_17', models.FloatField(blank=True, db_column='Inverse Bin 17', null=True)),
                ('inverse_bin_18', models.FloatField(blank=True, db_column='Inverse Bin 18', null=True)),
                ('inverse_bin_19', models.FloatField(blank=True, db_column='Inverse Bin 19', null=True)),
                ('inverse_bin_20', models.FloatField(blank=True, db_column='Inverse Bin 20', null=True)),
                ('inverse_bin_21', models.FloatField(blank=True, db_column='Inverse Bin 21', null=True)),
                ('inverse_bin_22', models.FloatField(blank=True, db_column='Inverse Bin 22', null=True)),
                ('inverse_bin_23', models.FloatField(blank=True, db_column='Inverse Bin 23', null=True)),
                ('inverse_bin_24', models.FloatField(blank=True, db_column='Inverse Bin 24', null=True)),
                ('inverse_bin_25', models.FloatField(blank=True, db_column='Inverse Bin 25', null=True)),
                ('inverse_bin_26', models.FloatField(blank=True, db_column='Inverse Bin 26', null=True)),
                ('inverse_bin_27', models.FloatField(blank=True, db_column='Inverse Bin 27', null=True)),
                ('inverse_bin_28', models.FloatField(blank=True, db_column='Inverse Bin 28', null=True)),
                ('inverse_bin_29', models.FloatField(blank=True, db_column='Inverse Bin 29', null=True)),
                ('inverse_bin_30', models.FloatField(blank=True, db_column='Inverse Bin 30', null=True)),
            ],
            options={
                'db_table': 'sensor_bcp',
                'managed': True,
            },
        ),
    ]
