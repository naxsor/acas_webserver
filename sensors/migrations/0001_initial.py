# Generated by Django 3.1.3 on 2021-07-04 14:45

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ccn',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('super_saturation', models.FloatField(blank=True, db_column='Super Saturation', null=True)),
                ('column_temperature_stabilized', models.FloatField(blank=True, db_column='Column Temperature Stabilized', null=True)),
                ('delta_t', models.FloatField(blank=True, db_column='Delta T', null=True)),
                ('t1_set', models.FloatField(blank=True, db_column='T1 Set', null=True)),
                ('t1_read', models.FloatField(blank=True, db_column='T1 Read', null=True)),
                ('t2_set', models.FloatField(blank=True, db_column='T2 Set', null=True)),
                ('t2_read', models.FloatField(blank=True, db_column='T2 Read', null=True)),
                ('t3_set', models.FloatField(blank=True, db_column='T3 Set', null=True)),
                ('t3_read', models.FloatField(blank=True, db_column='T3 Read', null=True)),
                ('naftion_set', models.FloatField(blank=True, db_column='Naftion Set', null=True)),
                ('t_naftion', models.FloatField(blank=True, db_column='T Naftion', null=True)),
                ('inlet_set', models.FloatField(blank=True, db_column='Inlet Set', null=True)),
                ('t_inlet', models.FloatField(blank=True, db_column='T Inlet', null=True)),
                ('ocp_set', models.FloatField(blank=True, db_column='OCP Set', null=True)),
                ('t_ocp', models.FloatField(blank=True, db_column='T OCP', null=True)),
                ('t_sample', models.FloatField(blank=True, db_column='T Sample', null=True)),
                ('sample_flow_rate', models.FloatField(blank=True, db_column='Sample Flow Rate', null=True)),
                ('sheath_flow_rate', models.FloatField(blank=True, db_column='Sheath Flow Rate', null=True)),
                ('sample_pressure', models.FloatField(blank=True, db_column='Sample Pressure', null=True)),
                ('laser_current', models.FloatField(blank=True, db_column='Laser Current', null=True)),
                ('overflow', models.FloatField(blank=True, db_column='Overflow', null=True)),
                ('baseline_monitor', models.FloatField(blank=True, db_column='Baseline Monitor', null=True)),
                ('first_stage_monitor', models.FloatField(blank=True, db_column='First Stage Monitor', null=True)),
                ('bin', models.FloatField(blank=True, db_column='Bin', null=True)),
                ('bin_1', models.FloatField(blank=True, db_column='Bin 1', null=True)),
                ('bin_2', models.FloatField(blank=True, db_column='Bin 2', null=True)),
                ('bin_3', models.FloatField(blank=True, db_column='Bin 3', null=True)),
                ('bin_4', models.FloatField(blank=True, db_column='Bin 4', null=True)),
                ('bin_5', models.FloatField(blank=True, db_column='Bin 5', null=True)),
                ('bin_6', models.FloatField(blank=True, db_column='Bin 6', null=True)),
                ('bin_7', models.FloatField(blank=True, db_column='Bin 7', null=True)),
                ('bin_8', models.FloatField(blank=True, db_column='Bin 8', null=True)),
                ('bin_9', models.FloatField(blank=True, db_column='Bin 9', null=True)),
                ('bin_10', models.FloatField(blank=True, db_column='Bin 10', null=True)),
                ('bin_11', models.FloatField(blank=True, db_column='Bin 11', null=True)),
                ('bin_12', models.FloatField(blank=True, db_column='Bin 12', null=True)),
                ('bin_13', models.FloatField(blank=True, db_column='Bin 13', null=True)),
                ('bin_14', models.FloatField(blank=True, db_column='Bin 14', null=True)),
                ('bin_15', models.FloatField(blank=True, db_column='Bin 15', null=True)),
                ('bin_16', models.FloatField(blank=True, db_column='Bin 16', null=True)),
                ('bin_17', models.FloatField(blank=True, db_column='Bin 17', null=True)),
                ('bin_18', models.FloatField(blank=True, db_column='Bin 18', null=True)),
                ('bin_19', models.FloatField(blank=True, db_column='Bin 19', null=True)),
                ('bin_20', models.FloatField(blank=True, db_column='Bin 20', null=True)),
                ('number_concentration', models.FloatField(blank=True, db_column='Number Concentration', null=True)),
                ('valve_set', models.FloatField(blank=True, db_column='Valve Set', null=True)),
                ('alarm_code', models.FloatField(blank=True, db_column='Alarm Code', null=True)),
                ('alarm_sum', models.FloatField(blank=True, db_column='Alarm Sum', null=True)),
                ('cmd', models.FloatField(blank=True, db_column='CMD', null=True)),
                ('gmd', models.FloatField(blank=True, db_column='GMD', null=True)),
            ],
            options={
                'db_table': 'sensor_ccn',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Clap',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('record_type', models.IntegerField(blank=True, db_column='Record Type', null=True)),
                ('flag', models.IntegerField(blank=True, db_column='Flag', null=True)),
                ('elapsed_time', models.IntegerField(blank=True, db_column='Elapsed Time', null=True)),
                ('filter_id', models.IntegerField(blank=True, db_column='Filter Id', null=True)),
                ('active_spot', models.IntegerField(blank=True, db_column='Active Spot', null=True)),
                ('sample_flow_rate', models.FloatField(blank=True, db_column='Sample Flow Rate', null=True)),
                ('sample_volume', models.FloatField(blank=True, db_column='Sample Volume', null=True)),
                ('case_temperature', models.FloatField(blank=True, db_column='Case Temperature', null=True)),
                ('air_temperature', models.FloatField(blank=True, db_column='Air Temperature', null=True)),
                ('channel_0_dark', models.FloatField(blank=True, db_column='Channel 0 Dark', null=True)),
                ('channel_0_red', models.FloatField(blank=True, db_column='Channel 0 Red', null=True)),
                ('channel_0_blue', models.FloatField(blank=True, db_column='Channel 0 Blue', null=True)),
                ('channel_0_green', models.FloatField(blank=True, db_column='Channel 0 Green', null=True)),
                ('channel_1_dark', models.FloatField(blank=True, db_column='Channel 1 Dark', null=True)),
                ('channel_1_red', models.FloatField(blank=True, db_column='Channel 1 Red', null=True)),
                ('channel_1_blue', models.FloatField(blank=True, db_column='Channel 1 Blue', null=True)),
                ('channel_1_green', models.FloatField(blank=True, db_column='Channel 1 Green', null=True)),
                ('channel_2_dark', models.FloatField(blank=True, db_column='Channel 2 Dark', null=True)),
                ('channel_2_red', models.FloatField(blank=True, db_column='Channel 2 Red', null=True)),
                ('channel_2_blue', models.FloatField(blank=True, db_column='Channel 2 Blue', null=True)),
                ('channel_2_green', models.FloatField(blank=True, db_column='Channel 2 Green', null=True)),
                ('channel_3_dark', models.FloatField(blank=True, db_column='Channel 3 Dark', null=True)),
                ('channel_3_red', models.FloatField(blank=True, db_column='Channel 3 Red', null=True)),
                ('channel_3_blue', models.FloatField(blank=True, db_column='Channel 3 Blue', null=True)),
                ('channel_3_green', models.FloatField(blank=True, db_column='Channel 3 Green', null=True)),
                ('channel_4_dark', models.FloatField(blank=True, db_column='Channel 4 Dark', null=True)),
                ('channel_4_red', models.FloatField(blank=True, db_column='Channel 4 Red', null=True)),
                ('channel_4_blue', models.FloatField(blank=True, db_column='Channel 4 Blue', null=True)),
                ('channel_4_green', models.FloatField(blank=True, db_column='Channel 4 Green', null=True)),
                ('channel_5_dark', models.FloatField(blank=True, db_column='Channel 5 Dark', null=True)),
                ('channel_5_red', models.FloatField(blank=True, db_column='Channel 5 Red', null=True)),
                ('channel_5_blue', models.FloatField(blank=True, db_column='Channel 5 Blue', null=True)),
                ('channel_5_green', models.FloatField(blank=True, db_column='Channel 5 Green', null=True)),
                ('channel_6_dark', models.FloatField(blank=True, db_column='Channel 6 Dark', null=True)),
                ('channel_6_red', models.FloatField(blank=True, db_column='Channel 6 Red', null=True)),
                ('channel_6_blue', models.FloatField(blank=True, db_column='Channel 6 Blue', null=True)),
                ('channel_6_green', models.FloatField(blank=True, db_column='Channel 6 Green', null=True)),
                ('channel_7_dark', models.FloatField(blank=True, db_column='Channel 7 Dark', null=True)),
                ('channel_7_red', models.FloatField(blank=True, db_column='Channel 7 Red', null=True)),
                ('channel_7_blue', models.FloatField(blank=True, db_column='Channel 7 Blue', null=True)),
                ('channel_7_green', models.FloatField(blank=True, db_column='Channel 7 Green', null=True)),
                ('channel_8_dark', models.FloatField(blank=True, db_column='Channel 8 Dark', null=True)),
                ('channel_8_red', models.FloatField(blank=True, db_column='Channel 8 Red', null=True)),
                ('channel_8_blue', models.FloatField(blank=True, db_column='Channel 8 Blue', null=True)),
                ('channel_8_green', models.FloatField(blank=True, db_column='Channel 8 Green', null=True)),
                ('channel_9_dark', models.FloatField(blank=True, db_column='Channel 9 Dark', null=True)),
                ('channel_9_red', models.FloatField(blank=True, db_column='Channel 9 Red', null=True)),
                ('channel_9_blue', models.FloatField(blank=True, db_column='Channel 9 Blue', null=True)),
                ('channel_9_green', models.FloatField(blank=True, db_column='Channel 9 Green', null=True)),
            ],
            options={
                'db_table': 'sensor_clap',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Hygrometer',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('water_vapor_content', models.FloatField(blank=True, db_column='Water Vapor Content', null=True)),
                ('water_vapor_pressure', models.FloatField(blank=True, db_column='Water Vapor Pressure', null=True)),
                ('water_vapor_temperature', models.FloatField(blank=True, db_column='Water Vapor Temperature', null=True)),
            ],
            options={
                'db_table': 'sensor_hygrometer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Inlet_Switcher_State',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('inlet_selected', models.IntegerField(blank=True, null=True)),
                ('inlet_name', models.CharField(max_length=15, null=True)),
                ('inlet_1_state', models.CharField(max_length=4, null=True)),
                ('inlet_2_state', models.CharField(max_length=4, null=True)),
            ],
            options={
                'db_table': 'inlet_switcher_state',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('acronym', models.CharField(blank=True, max_length=50, null=True)),
                ('data_table', models.CharField(blank=True, db_column='data table', max_length=50, null=True)),
                ('available', models.BooleanField(blank=True, null=True)),
                ('process', models.CharField(blank=True, db_column='Process', max_length=50, null=True)),
            ],
            options={
                'db_table': 'sensor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SensorCpd3Clap',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('transmittance', models.FloatField(blank=True, db_column='Transmittance', null=True)),
                ('aerosol_light_absorption_coefficient', models.FloatField(blank=True, db_column='Aerosol light absorption coefficient', null=True)),
                ('transmittance_b', models.FloatField(blank=True, db_column='Transmittance B', null=True)),
            ],
            options={
                'db_table': 'sensor_cpd3_clap',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SensorCpd3Cpc',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('condensation_nuclei_concentration', models.FloatField(blank=True, db_column='Condensation nuclei concentration', null=True)),
            ],
            options={
                'db_table': 'sensor_cpd3_cpc',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SensorCpd3Neph',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('aerosol_light_scattering_coefficient', models.FloatField(blank=True, db_column='Aerosol light scattering coefficient', null=True)),
            ],
            options={
                'db_table': 'sensor_cpd3_neph',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SensorCpd3PwdVaisala',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('ambient_temperature', models.FloatField(blank=True, db_column='Ambient Temperature', null=True)),
                ('precipitation_rate', models.FloatField(blank=True, db_column='Precipitation Rate', null=True)),
                ('present_weather_flag', models.FloatField(blank=True, db_column='Present Weather Flag', null=True)),
                ('present_weather_code', models.FloatField(blank=True, db_column='Present Weather Code', null=True)),
                ('visibility_distance', models.FloatField(blank=True, db_column='Visibility Distance', null=True)),
            ],
            options={
                'db_table': 'sensor_cpd3_pwd_vaisala',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SensorCpd3WmtVaisala',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('wind_direction', models.FloatField(blank=True, db_column='Wind Direction', null=True)),
                ('wind_speed', models.FloatField(blank=True, db_column='Wind Speed', null=True)),
            ],
            options={
                'db_table': 'sensor_cpd3_wmt_vaisala',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SensorCpd3WxtVaisala',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('ambient_pressure', models.FloatField(blank=True, db_column='Ambient Pressure', null=True)),
                ('ambient_temperature', models.FloatField(blank=True, db_column='Ambient Temperature', null=True)),
                ('ambient_relative_humidity', models.FloatField(blank=True, db_column='Ambient Relative Humidity', null=True)),
                ('solar_radiation', models.FloatField(blank=True, db_column='Solar Radiation', null=True)),
                ('wind_direction', models.FloatField(blank=True, db_column='Wind Direction', null=True)),
                ('precipitation_rate', models.FloatField(blank=True, db_column='Precipitation Rate', null=True)),
                ('wind_speed', models.FloatField(blank=True, db_column='Wind Speed', null=True)),
                ('wind_gust_speed', models.FloatField(blank=True, db_column='Wind Gust Speed', null=True)),
            ],
            options={
                'db_table': 'sensor_cpd3_wxt_vaisala',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='sp2_xr',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('utc_offset', models.IntegerField(blank=True, db_column='UTC Offset', null=True)),
                ('incand_part_conc', models.FloatField(blank=True, db_column='Incandescence Particle Concentration', null=True)),
                ('scatt_part_conc', models.FloatField(blank=True, db_column='Scattering Particle Concentration', null=True)),
                ('incand_mass_conc', models.FloatField(blank=True, db_column='Total Mass per Second', null=True)),
                ('scatt_bin_1', models.FloatField(blank=True, db_column='Scatter Bin 1', null=True)),
                ('scatt_bin_2', models.FloatField(blank=True, db_column='Scatter Bin 2', null=True)),
                ('scatt_bin_3', models.FloatField(blank=True, db_column='Scatter Bin 3', null=True)),
                ('scatt_bin_4', models.FloatField(blank=True, db_column='Scatter Bin 4', null=True)),
                ('scatt_bin_5', models.FloatField(blank=True, db_column='Scatter Bin 5', null=True)),
                ('scatt_bin_6', models.FloatField(blank=True, db_column='Scatter Bin 6', null=True)),
                ('scatt_bin_7', models.FloatField(blank=True, db_column='Scatter Bin 7', null=True)),
                ('scatt_bin_8', models.FloatField(blank=True, db_column='Scatter Bin 8', null=True)),
                ('scatt_bin_9', models.FloatField(blank=True, db_column='Scatter Bin 9', null=True)),
                ('scatt_bin_10', models.FloatField(blank=True, db_column='Scatter Bin 10', null=True)),
                ('scatt_bin_11', models.FloatField(blank=True, db_column='Scatter Bin 11', null=True)),
                ('scatt_bin_12', models.FloatField(blank=True, db_column='Scatter Bin 12', null=True)),
                ('scatt_bin_13', models.FloatField(blank=True, db_column='Scatter Bin 13', null=True)),
                ('scatt_bin_14', models.FloatField(blank=True, db_column='Scatter Bin 14', null=True)),
                ('scatt_bin_15', models.FloatField(blank=True, db_column='Scatter Bin 15', null=True)),
                ('scatt_bin_16', models.FloatField(blank=True, db_column='Scatter Bin 16', null=True)),
                ('scatt_bin_17', models.FloatField(blank=True, db_column='Scatter Bin 17', null=True)),
                ('scatt_bin_18', models.FloatField(blank=True, db_column='Scatter Bin 18', null=True)),
                ('scatt_bin_19', models.FloatField(blank=True, db_column='Scatter Bin 19', null=True)),
                ('scatt_bin_20', models.FloatField(blank=True, db_column='Scatter Bin 20', null=True)),
                ('incand_bin_1', models.FloatField(blank=True, db_column='Incandescence Bin 1', null=True)),
                ('incand_bin_2', models.FloatField(blank=True, db_column='Incandescence Bin 2', null=True)),
                ('incand_bin_3', models.FloatField(blank=True, db_column='Incandescence Bin 3', null=True)),
                ('incand_bin_4', models.FloatField(blank=True, db_column='Incandescence Bin 4', null=True)),
                ('incand_bin_5', models.FloatField(blank=True, db_column='Incandescence Bin 5', null=True)),
                ('incand_bin_6', models.FloatField(blank=True, db_column='Incandescence Bin 6', null=True)),
                ('incand_bin_7', models.FloatField(blank=True, db_column='Incandescence Bin 7', null=True)),
                ('incand_bin_8', models.FloatField(blank=True, db_column='Incandescence Bin 8', null=True)),
                ('incand_bin_9', models.FloatField(blank=True, db_column='Incandescence Bin 9', null=True)),
                ('incand_bin_10', models.FloatField(blank=True, db_column='Incandescence Bin 10', null=True)),
                ('incand_bin_11', models.FloatField(blank=True, db_column='Incandescence Bin 11', null=True)),
                ('incand_bin_12', models.FloatField(blank=True, db_column='Incandescence Bin 12', null=True)),
                ('incand_bin_13', models.FloatField(blank=True, db_column='Incandescence Bin 13', null=True)),
                ('incand_bin_14', models.FloatField(blank=True, db_column='Incandescence Bin 14', null=True)),
                ('incand_bin_15', models.FloatField(blank=True, db_column='Incandescence Bin 15', null=True)),
                ('incand_bin_16', models.FloatField(blank=True, db_column='Incandescence Bin 16', null=True)),
                ('incand_bin_17', models.FloatField(blank=True, db_column='Incandescence Bin 17', null=True)),
                ('incand_bin_18', models.FloatField(blank=True, db_column='Incandescence Bin 18', null=True)),
                ('incand_bin_19', models.FloatField(blank=True, db_column='Incandescence Bin 19', null=True)),
                ('incand_bin_20', models.FloatField(blank=True, db_column='Incandescence Bin 20', null=True)),
                ('qualified_part', models.FloatField(blank=True, db_column='Qualified Particles', null=True)),
                ('pbp_record', models.FloatField(blank=True, db_column='PBP Record', null=True)),
                ('dual_qual_scatt_incand_part', models.FloatField(blank=True, db_column='Dual Qualified Scatter and Incandescence Particles', null=True)),
                ('qualified_scatt_part', models.FloatField(blank=True, db_column='Qualified Scatter Only Particles', null=True)),
                ('qualifies_incand_part', models.FloatField(blank=True, db_column='Qualified Incandescence OnlyParticles', null=True)),
                ('sheath_flow_read_vccm', models.FloatField(blank=True, db_column='Sheath Flow Controller Read (v)', null=True)),
                ('sheath_flow_read_sccm', models.FloatField(blank=True, db_column='Sheath Flow Controller Read (s)', null=True)),
                ('sheath_flow_press', models.FloatField(blank=True, db_column='Sheath Flow Controller Pressure', null=True)),
                ('sheath_flow_temp', models.FloatField(blank=True, db_column='Sheath Flow Controller Temperature', null=True)),
                ('sample_flow_read_vccm', models.FloatField(blank=True, db_column='Sample Flow Controller Read (v)', null=True)),
                ('sample_flow_read_sccm', models.FloatField(blank=True, db_column='Sample Flow Controller Read (s)', null=True)),
                ('sample_flow_press', models.FloatField(blank=True, db_column='Sample Flow Controller Pressure', null=True)),
                ('sample_flow_temp', models.FloatField(blank=True, db_column='Sample Flow Controller Temperature', null=True)),
                ('laser_tec_temp', models.FloatField(blank=True, db_column='Laser TEC Temperature', null=True)),
                ('inlet_air_temp', models.FloatField(blank=True, db_column='Inlet Air Temperature', null=True)),
                ('heatsink_temp', models.FloatField(blank=True, db_column='Computer Heatsink Temperature', null=True)),
                ('laser_heatsink_temp', models.FloatField(blank=True, db_column='Laser Heatsink Temperature', null=True)),
                ('outlet_air_temp', models.FloatField(blank=True, db_column='Outlet Air Temperature', null=True)),
                ('yag_output_monitor', models.FloatField(blank=True, db_column='YAG Output Monitor', null=True)),
                ('cavity_pressure', models.FloatField(blank=True, db_column='Cavity Pressure', null=True)),
                ('current_monitor_pump_laser', models.FloatField(blank=True, db_column='Current Monitor Pump Laser', null=True)),
                ('pump_laser_power_monitor', models.FloatField(blank=True, db_column='Pump Laser Power Monitor', null=True)),
                ('laser_voltage_monitor', models.FloatField(blank=True, db_column='Laser Voltage Monitor', null=True)),
                ('high_voltage_monitor', models.FloatField(blank=True, db_column='High Voltage Monitor', null=True)),
                ('purge_monitor_flow', models.FloatField(blank=True, db_column='Purge Flow Monitor', null=True)),
                ('board_temperature', models.FloatField(blank=True, db_column='Board Temperature', null=True)),
                ('baseline_sizer_low', models.FloatField(blank=True, db_column='Baseline Sizer Low', null=True)),
                ('baseline_sizer_high', models.FloatField(blank=True, db_column='Baseline Sizer High', null=True)),
                ('baseline_incand_low', models.FloatField(blank=True, db_column='Baseline Incandescence Low', null=True)),
                ('baseline_incand_high', models.FloatField(blank=True, db_column='Baseline Incandescence High', null=True)),
                ('bandwidth_sizer_low', models.FloatField(blank=True, db_column='Bandwidth Sizer Low', null=True)),
                ('bandwidth_sizer_high', models.FloatField(blank=True, db_column='Bandwidth Sizer High', null=True)),
                ('bandwidth_incand_low', models.FloatField(blank=True, db_column='Bandwidth Incandescence Low', null=True)),
                ('bandwidth_incand_high', models.FloatField(blank=True, db_column='Bandwidth Incandescence High', null=True)),
                ('scatt_rel_peak', models.FloatField(blank=True, db_column='Scattering Relative Peak', null=True)),
                ('scatt_transit_time', models.FloatField(blank=True, db_column='Scatter Transit Time', null=True)),
                ('scatt_peak_time', models.FloatField(blank=True, db_column='Scatter Peak Time', null=True)),
                ('scatt_hwhm', models.FloatField(blank=True, db_column='Scatter HWHM', null=True)),
                ('scatt_size', models.FloatField(blank=True, db_column='Scatter Size', null=True)),
                ('incand_rel_peal', models.FloatField(blank=True, db_column='Incandescence Relative Peak', null=True)),
                ('incand_transit_time', models.FloatField(blank=True, db_column='Incandescence Transit Time', null=True)),
                ('incand_peak_time', models.FloatField(blank=True, db_column='Incandescence Peak Time', null=True)),
                ('incand_hwhm', models.FloatField(blank=True, db_column='Incandescence HWHM', null=True)),
                ('incand_delay', models.FloatField(blank=True, db_column='Incandescence Delay', null=True)),
                ('incand_mass', models.FloatField(blank=True, db_column='Incandescence Mass', null=True)),
                ('flag_dual_qualified', models.FloatField(blank=True, db_column='Flag - Dual Qualified', null=True)),
                ('flag_scatt_detected', models.FloatField(blank=True, db_column='Flag - Scatter Detected', null=True)),
                ('flag_incand_detected', models.FloatField(blank=True, db_column='Flag - Incandescence Detected', null=True)),
                ('flag_scatt_rejected', models.FloatField(blank=True, db_column='Flag - Scatter Rejected', null=True)),
                ('flag_incand_rejected', models.FloatField(blank=True, db_column='Flag - Incandescence Rejected', null=True)),
            ],
            options={
                'db_table': 'sensor_sp2',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Uv_Lif',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('number_408_board_temperature', models.FloatField(blank=True, db_column='408 Board Temperature', null=True)),
                ('bandwidths_0', models.FloatField(blank=True, db_column='Bandwidths 0', null=True)),
                ('bandwidths_1', models.FloatField(blank=True, db_column='Bandwidths 1', null=True)),
                ('bandwidths_2', models.FloatField(blank=True, db_column='Bandwidths 2', null=True)),
                ('bandwidths_3', models.FloatField(blank=True, db_column='Bandwidths 3', null=True)),
                ('baseline_0', models.FloatField(blank=True, db_column='Baseline 0', null=True)),
                ('baseline_1', models.FloatField(blank=True, db_column='Baseline 1', null=True)),
                ('baseline_2', models.FloatField(blank=True, db_column='Baseline 2', null=True)),
                ('baseline_3', models.FloatField(blank=True, db_column='Baseline 3', null=True)),
                ('clump_count', models.FloatField(blank=True, null=True)),
                ('exited_particles_count_cm3_field', models.FloatField(blank=True, db_column='Exited Particles Count', null=True)),
                ('total_particle_count_all_cm3_field', models.FloatField(blank=True, db_column='Total Particle Count', null=True)),
                ('h12310_temperature', models.FloatField(blank=True, null=True)),
                ('max_transit_time_counts', models.FloatField(blank=True, null=True)),
                ('min_transit_time_counts', models.FloatField(blank=True, null=True)),
                ('missed_particle_count', models.FloatField(blank=True, null=True)),
                ('num_discarted_particles', models.FloatField(blank=True, null=True)),
                ('num_oversize_rejects', models.FloatField(blank=True, null=True)),
                ('relative_humidity', models.FloatField(blank=True, db_column='Relative Humidity', null=True)),
                ('system_power', models.FloatField(blank=True, db_column='System Power', null=True)),
                ('sample_mass_flow_rate_l_min_field', models.FloatField(blank=True, db_column='Sample Mass Flow Rate', null=True)),
                ('sample_pressure', models.FloatField(blank=True, db_column='Sample Pressure', null=True)),
                ('sample_flow_rate_set_point', models.FloatField(blank=True, db_column='Sample Flow Rate Set Point', null=True)),
                ('sample_temperature', models.FloatField(blank=True, db_column='Sample Temperature', null=True)),
                ('sample_flow_rate', models.FloatField(blank=True, db_column='Sample Flow Rate', null=True)),
                ('sheath_sample_mass_flow_l_min_field', models.FloatField(blank=True, db_column='Sheath Sample Mass Flow', null=True)),
                ('sheath_sample_pressure', models.FloatField(blank=True, db_column='Sheath Sample Pressure', null=True)),
                ('sheath_sample_flow_rate_set_point', models.FloatField(blank=True, db_column='Sheath Sample Flow Rate Set Point', null=True)),
                ('sheath_sample_temperature', models.FloatField(blank=True, db_column='Sheath Sample Temperature', null=True)),
                ('sheath_flow_rate', models.FloatField(blank=True, db_column='Sheath Flow Rate', null=True)),
                ('sizer_oversize_count', models.FloatField(blank=True, null=True)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('total_particle_count', models.FloatField(blank=True, null=True)),
                ('total_trigger_count', models.FloatField(blank=True, null=True)),
                ('valid_particle_count', models.FloatField(blank=True, null=True)),
                ('xe1_power', models.FloatField(blank=True, null=True)),
                ('xe2_power', models.FloatField(blank=True, null=True)),
                ('asphericity', models.FloatField(blank=True, db_column='Asphericity', null=True)),
                ('density_gcm3', models.FloatField(blank=True, null=True)),
                ('ep_overflow_flag', models.FloatField(blank=True, null=True)),
                ('flag_excited', models.FloatField(blank=True, null=True)),
                ('mass_ug', models.FloatField(blank=True, null=True)),
                ('nf_shape_0', models.FloatField(blank=True, null=True)),
                ('nf_shape_1', models.FloatField(blank=True, null=True)),
                ('nf_shape_2', models.FloatField(blank=True, null=True)),
                ('nf_shape_3', models.FloatField(blank=True, null=True)),
                ('nf_sizer_relative_peak', models.FloatField(blank=True, null=True)),
                ('nf_sizer_transit_time_nsec', models.FloatField(blank=True, null=True)),
                ('size_of_particle_um_field', models.FloatField(blank=True, db_column='Size of Particle', null=True)),
                ('xe1_a_fluorescence_peak', models.FloatField(blank=True, db_column='Xe1-A Fluorescence Peak', null=True)),
                ('xe1_b_fluorescence_peak', models.FloatField(blank=True, db_column='Xe1-B Fluorescence Peak', null=True)),
                ('xe2_a_fluorescence_peak', models.FloatField(blank=True, db_column='Xe2-A Fluorescence Peak', null=True)),
                ('xe2_b_fluorescence_peak', models.FloatField(blank=True, db_column='Xe2-B Fluorescence Peak', null=True)),
            ],
            options={
                'db_table': 'sensor_uv_lif',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('sensor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='sensors.sensor')),
                ('file_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'files',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('sensor', models.ForeignKey(blank=True, db_column='Sensor id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='sensors.sensor')),
            ],
            options={
                'db_table': 'process',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Primary_Variables',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('variable_name', models.CharField(blank=True, db_column='Variable Name', max_length=50, null=True)),
                ('parameter_unit', models.CharField(blank=True, db_column='Parameter Unit', max_length=50, null=True)),
                ('housekeeping', models.BooleanField(blank=True, db_column='Housekeeping', null=True)),
                ('available', models.BooleanField(blank=True, db_column='Available', null=True)),
                ('sensor', models.ForeignKey(blank=True, db_column='Sensor id', null=True, on_delete=django.db.models.deletion.CASCADE, to='sensors.sensor')),
            ],
            options={
                'verbose_name': 'Variable',
                'db_table': 'primary_variables',
                'ordering': [django.db.models.expressions.OrderBy(django.db.models.expressions.F('sensor'), nulls_last=True)],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('log_type', models.CharField(blank=True, max_length=15, null=True)),
                ('log', models.CharField(blank=True, max_length=300, null=True)),
                ('sensor_id', models.ForeignKey(blank=True, db_column='Sensor id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensors.sensor')),
            ],
            options={
                'db_table': 'sensor_log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Dma',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('start_datetime', models.DateTimeField(db_column='Start Datetime')),
                ('end_datetime', models.DateTimeField(db_column='End Datetime')),
                ('scan_direction', models.IntegerField(blank=True, db_column='Scan Direction', null=True)),
                ('sheath_sample_pressure', models.IntegerField(blank=True, db_column='Sheath Sample Pressure', null=True)),
                ('sheath_temp', models.FloatField(blank=True, db_column='Sheath Temperature', null=True)),
                ('sheath_average', models.FloatField(blank=True, db_column='Sheath Average', null=True)),
                ('sheath_standard_deviation', models.FloatField(blank=True, db_column='Sheath Standard Deviation', null=True)),
                ('sheath_rh', models.IntegerField(blank=True, db_column='Sheath RH', null=True)),
                ('colsamp_avg', models.FloatField(blank=True, db_column='Average Column Flow', null=True)),
                ('colsamp_sdec', models.FloatField(blank=True, db_column='Standard Deviation of Column Flow', null=True)),
                ('colsame_rh', models.IntegerField(blank=True, db_column='Relative Humidity', null=True)),
                ('colsamp_temp', models.FloatField(blank=True, db_column='Temperature', null=True)),
                ('cpc_a_flow_average', models.FloatField(blank=True, db_column='CPC A Flow Average', null=True)),
                ('cpc_a_standard_deviation', models.FloatField(blank=True, db_column='CPC A Standard Deviation', null=True)),
                ('sat_temp', models.FloatField(blank=True, db_column='Saturator Temperature', null=True)),
                ('cond_temp', models.FloatField(blank=True, db_column='Condenser Temperature', null=True)),
                ('sems_errors', models.FloatField(blank=True, db_column='SEMS Errors', null=True)),
                ('mcpc_errors', models.FloatField(blank=True, db_column='MCPC Errors', null=True)),
                ('impactor_press', models.FloatField(blank=True, db_column='Impactor Differential Pressure', null=True)),
                ('bin_diameter_1', models.FloatField(blank=True, db_column='Bin Diameter 1', null=True)),
                ('bin_diameter_2', models.FloatField(blank=True, db_column='Bin Diameter 2', null=True)),
                ('bin_diameter_3', models.FloatField(blank=True, db_column='Bin Diameter 3', null=True)),
                ('bin_diameter_4', models.FloatField(blank=True, db_column='Bin Diameter 4', null=True)),
                ('bin_diameter_5', models.FloatField(blank=True, db_column='Bin Diameter 5', null=True)),
                ('bin_diameter_6', models.FloatField(blank=True, db_column='Bin Diameter 6', null=True)),
                ('bin_diameter_7', models.FloatField(blank=True, db_column='Bin Diameter 7', null=True)),
                ('bin_diameter_8', models.FloatField(blank=True, db_column='Bin Diameter 8', null=True)),
                ('bin_diameter_9', models.FloatField(blank=True, db_column='Bin Diameter 9', null=True)),
                ('bin_diameter_10', models.FloatField(blank=True, db_column='Bin Diameter 10', null=True)),
                ('bin_diameter_11', models.FloatField(blank=True, db_column='Bin Diameter 11', null=True)),
                ('bin_diameter_12', models.FloatField(blank=True, db_column='Bin Diameter 12', null=True)),
                ('bin_diameter_13', models.FloatField(blank=True, db_column='Bin Diameter 13', null=True)),
                ('bin_diameter_14', models.FloatField(blank=True, db_column='Bin Diameter 14', null=True)),
                ('bin_diameter_15', models.FloatField(blank=True, db_column='Bin Diameter 15', null=True)),
                ('bin_diameter_16', models.FloatField(blank=True, db_column='Bin Diameter 16', null=True)),
                ('bin_diameter_17', models.FloatField(blank=True, db_column='Bin Diameter 17', null=True)),
                ('bin_diameter_18', models.FloatField(blank=True, db_column='Bin Diameter 18', null=True)),
                ('bin_diameter_19', models.FloatField(blank=True, db_column='Bin Diameter 19', null=True)),
                ('bin_diameter_20', models.FloatField(blank=True, db_column='Bin Diameter 20', null=True)),
                ('bin_diameter_21', models.FloatField(blank=True, db_column='Bin Diameter 21', null=True)),
                ('bin_diameter_22', models.FloatField(blank=True, db_column='Bin Diameter 22', null=True)),
                ('bin_diameter_23', models.FloatField(blank=True, db_column='Bin Diameter 23', null=True)),
                ('bin_diameter_24', models.FloatField(blank=True, db_column='Bin Diameter 24', null=True)),
                ('bin_diameter_25', models.FloatField(blank=True, db_column='Bin Diameter 25', null=True)),
                ('bin_diameter_26', models.FloatField(blank=True, db_column='Bin Diameter 26', null=True)),
                ('bin_diameter_27', models.FloatField(blank=True, db_column='Bin Diameter 27', null=True)),
                ('bin_diameter_28', models.FloatField(blank=True, db_column='Bin Diameter 28', null=True)),
                ('bin_diameter_29', models.FloatField(blank=True, db_column='Bin Diameter 29', null=True)),
                ('bin_diameter_30', models.FloatField(blank=True, db_column='Bin Diameter 30', null=True)),
                ('bin_diameter_31', models.FloatField(blank=True, db_column='Bin Diameter 31', null=True)),
                ('bin_diameter_32', models.FloatField(blank=True, db_column='Bin Diameter 32', null=True)),
                ('bin_diameter_33', models.FloatField(blank=True, db_column='Bin Diameter 33', null=True)),
                ('bin_diameter_34', models.FloatField(blank=True, db_column='Bin Diameter 34', null=True)),
                ('bin_diameter_35', models.FloatField(blank=True, db_column='Bin Diameter 35', null=True)),
                ('bin_diameter_36', models.FloatField(blank=True, db_column='Bin Diameter 36', null=True)),
                ('bin_diameter_37', models.FloatField(blank=True, db_column='Bin Diameter 37', null=True)),
                ('bin_diameter_38', models.FloatField(blank=True, db_column='Bin Diameter 38', null=True)),
                ('bin_diameter_39', models.FloatField(blank=True, db_column='Bin Diameter 39', null=True)),
                ('bin_diameter_40', models.FloatField(blank=True, db_column='Bin Diameter 40', null=True)),
                ('bin_diameter_41', models.FloatField(blank=True, db_column='Bin Diameter 41', null=True)),
                ('bin_diameter_42', models.FloatField(blank=True, db_column='Bin Diameter 42', null=True)),
                ('bin_diameter_43', models.FloatField(blank=True, db_column='Bin Diameter 43', null=True)),
                ('bin_diameter_44', models.FloatField(blank=True, db_column='Bin Diameter 44', null=True)),
                ('bin_diameter_45', models.FloatField(blank=True, db_column='Bin Diameter 45', null=True)),
                ('bin_diameter_46', models.FloatField(blank=True, db_column='Bin Diameter 46', null=True)),
                ('bin_diameter_47', models.FloatField(blank=True, db_column='Bin Diameter 47', null=True)),
                ('bin_diameter_48', models.FloatField(blank=True, db_column='Bin Diameter 48', null=True)),
                ('bin_diameter_49', models.FloatField(blank=True, db_column='Bin Diameter 49', null=True)),
                ('bin_diameter_50', models.FloatField(blank=True, db_column='Bin Diameter 50', null=True)),
                ('bin_diameter_51', models.FloatField(blank=True, db_column='Bin Diameter 51', null=True)),
                ('bin_diameter_52', models.FloatField(blank=True, db_column='Bin Diameter 52', null=True)),
                ('bin_diameter_53', models.FloatField(blank=True, db_column='Bin Diameter 53', null=True)),
                ('bin_diameter_54', models.FloatField(blank=True, db_column='Bin Diameter 54', null=True)),
                ('bin_diameter_55', models.FloatField(blank=True, db_column='Bin Diameter 55', null=True)),
                ('bin_diameter_56', models.FloatField(blank=True, db_column='Bin Diameter 56', null=True)),
                ('bin_diameter_57', models.FloatField(blank=True, db_column='Bin Diameter 57', null=True)),
                ('bin_diameter_58', models.FloatField(blank=True, db_column='Bin Diameter 58', null=True)),
                ('bin_diameter_59', models.FloatField(blank=True, db_column='Bin Diameter 59', null=True)),
                ('bin_diameter_60', models.FloatField(blank=True, db_column='Bin Diameter 60', null=True)),
                ('bin_conc_1', models.FloatField(blank=True, db_column='Bin Concentration 1', null=True)),
                ('bin_conc_2', models.FloatField(blank=True, db_column='Bin Concentration 2', null=True)),
                ('bin_conc_3', models.FloatField(blank=True, db_column='Bin Concentration 3', null=True)),
                ('bin_conc_4', models.FloatField(blank=True, db_column='Bin Concentration 4', null=True)),
                ('bin_conc_5', models.FloatField(blank=True, db_column='Bin Concentration 5', null=True)),
                ('bin_conc_6', models.FloatField(blank=True, db_column='Bin Concentration 6', null=True)),
                ('bin_conc_7', models.FloatField(blank=True, db_column='Bin Concentration 7', null=True)),
                ('bin_conc_8', models.FloatField(blank=True, db_column='Bin Concentration 8', null=True)),
                ('bin_conc_9', models.FloatField(blank=True, db_column='Bin Concentration 9', null=True)),
                ('bin_conc_10', models.FloatField(blank=True, db_column='Bin Concentration 10', null=True)),
                ('bin_conc_11', models.FloatField(blank=True, db_column='Bin Concentration 11', null=True)),
                ('bin_conc_12', models.FloatField(blank=True, db_column='Bin Concentration 12', null=True)),
                ('bin_conc_13', models.FloatField(blank=True, db_column='Bin Concentration 13', null=True)),
                ('bin_conc_14', models.FloatField(blank=True, db_column='Bin Concentration 14', null=True)),
                ('bin_conc_15', models.FloatField(blank=True, db_column='Bin Concentration 15', null=True)),
                ('bin_conc_16', models.FloatField(blank=True, db_column='Bin Concentration 16', null=True)),
                ('bin_conc_17', models.FloatField(blank=True, db_column='Bin Concentration 17', null=True)),
                ('bin_conc_18', models.FloatField(blank=True, db_column='Bin Concentration 18', null=True)),
                ('bin_conc_19', models.FloatField(blank=True, db_column='Bin Concentration 19', null=True)),
                ('bin_conc_20', models.FloatField(blank=True, db_column='Bin Concentration 20', null=True)),
                ('bin_conc_21', models.FloatField(blank=True, db_column='Bin Concentration 21', null=True)),
                ('bin_conc_22', models.FloatField(blank=True, db_column='Bin Concentration 22', null=True)),
                ('bin_conc_23', models.FloatField(blank=True, db_column='Bin Concentration 23', null=True)),
                ('bin_conc_24', models.FloatField(blank=True, db_column='Bin Concentration 24', null=True)),
                ('bin_conc_25', models.FloatField(blank=True, db_column='Bin Concentration 25', null=True)),
                ('bin_conc_26', models.FloatField(blank=True, db_column='Bin Concentration 26', null=True)),
                ('bin_conc_27', models.FloatField(blank=True, db_column='Bin Concentration 27', null=True)),
                ('bin_conc_28', models.FloatField(blank=True, db_column='Bin Concentration 28', null=True)),
                ('bin_conc_29', models.FloatField(blank=True, db_column='Bin Concentration 29', null=True)),
                ('bin_conc_30', models.FloatField(blank=True, db_column='Bin Concentration 30', null=True)),
                ('bin_conc_31', models.FloatField(blank=True, db_column='Bin Concentration 31', null=True)),
                ('bin_conc_32', models.FloatField(blank=True, db_column='Bin Concentration 32', null=True)),
                ('bin_conc_33', models.FloatField(blank=True, db_column='Bin Concentration 33', null=True)),
                ('bin_conc_34', models.FloatField(blank=True, db_column='Bin Concentration 34', null=True)),
                ('bin_conc_35', models.FloatField(blank=True, db_column='Bin Concentration 35', null=True)),
                ('bin_conc_36', models.FloatField(blank=True, db_column='Bin Concentration 36', null=True)),
                ('bin_conc_37', models.FloatField(blank=True, db_column='Bin Concentration 37', null=True)),
                ('bin_conc_38', models.FloatField(blank=True, db_column='Bin Concentration 38', null=True)),
                ('bin_conc_39', models.FloatField(blank=True, db_column='Bin Concentration 39', null=True)),
                ('bin_conc_40', models.FloatField(blank=True, db_column='Bin Concentration 40', null=True)),
                ('bin_conc_41', models.FloatField(blank=True, db_column='Bin Concentration 41', null=True)),
                ('bin_conc_42', models.FloatField(blank=True, db_column='Bin Concentration 42', null=True)),
                ('bin_conc_43', models.FloatField(blank=True, db_column='Bin Concentration 43', null=True)),
                ('bin_conc_44', models.FloatField(blank=True, db_column='Bin Concentration 44', null=True)),
                ('bin_conc_45', models.FloatField(blank=True, db_column='Bin Concentration 45', null=True)),
                ('bin_conc_46', models.FloatField(blank=True, db_column='Bin Concentration 46', null=True)),
                ('bin_conc_47', models.FloatField(blank=True, db_column='Bin Concentration 47', null=True)),
                ('bin_conc_48', models.FloatField(blank=True, db_column='Bin Concentration 48', null=True)),
                ('bin_conc_49', models.FloatField(blank=True, db_column='Bin Concentration 49', null=True)),
                ('bin_conc_50', models.FloatField(blank=True, db_column='Bin Concentration 50', null=True)),
                ('bin_conc_51', models.FloatField(blank=True, db_column='Bin Concentration 51', null=True)),
                ('bin_conc_52', models.FloatField(blank=True, db_column='Bin Concentration 52', null=True)),
                ('bin_conc_53', models.FloatField(blank=True, db_column='Bin Concentration 53', null=True)),
                ('bin_conc_54', models.FloatField(blank=True, db_column='Bin Concentration 54', null=True)),
                ('bin_conc_55', models.FloatField(blank=True, db_column='Bin Concentration 55', null=True)),
                ('bin_conc_56', models.FloatField(blank=True, db_column='Bin Concentration 56', null=True)),
                ('bin_conc_57', models.FloatField(blank=True, db_column='Bin Concentration 57', null=True)),
                ('bin_conc_58', models.FloatField(blank=True, db_column='Bin Concentration 58', null=True)),
                ('bin_conc_59', models.FloatField(blank=True, db_column='Bin Concentration 59', null=True)),
                ('bin_conc_60', models.FloatField(blank=True, db_column='Bin Concentration 60', null=True)),
            ],
            options={
                'db_table': 'sensor_dma',
                'managed': True,
                'unique_together': {('datetime', 'start_datetime', 'end_datetime')},
            },
        ),
    ]
