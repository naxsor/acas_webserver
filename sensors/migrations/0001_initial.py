# Generated by Django 3.1.2 on 2020-10-30 06:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Inlet_Switcher_State',
            fields=[
                ('datetime', models.DateTimeField(db_column='Datetime', primary_key=True, serialize=False)),
                ('inlet_state', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'inlet_switcher_state',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('acronym', models.CharField(blank=True, max_length=50, null=True)),
                ('data_table', models.CharField(blank=True, db_column='data table', max_length=50, null=True)),
                ('available', models.BooleanField(blank=True, null=True)),
                ('process', models.CharField(blank=True, db_column='Process', max_length=50, null=True)),
            ],
            options={
                'db_table': 'sensor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('sensor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='sensors.sensor')),
                ('file_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'files',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('sensor', models.ForeignKey(blank=True, db_column='Sensor id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='sensors.sensor')),
            ],
            options={
                'db_table': 'process',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Primary_Variables',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('variable_name', models.CharField(blank=True, db_column='Variable Name', max_length=50, null=True)),
                ('parameter_unit', models.CharField(blank=True, db_column='Parameter Unit', max_length=50, null=True)),
                ('housekeeping', models.BooleanField(blank=True, db_column='Housekeeping', null=True)),
                ('available', models.BooleanField(blank=True, db_column='Available', null=True)),
                ('sensor_id', models.ForeignKey(blank=True, db_column='Sensor id', null=True, on_delete=django.db.models.deletion.CASCADE, to='sensors.sensor')),
            ],
            options={
                'db_table': 'primary_variables',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('log_type', models.CharField(blank=True, max_length=15, null=True)),
                ('log', models.CharField(blank=True, max_length=300, null=True)),
                ('sensor_id', models.ForeignKey(blank=True, db_column='Sensor id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensors.sensor')),
            ],
            options={
                'db_table': 'sensor_log',
                'managed': True,
            },
        ),
    ]
